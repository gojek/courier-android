"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},v=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),v=r,m=d["".concat(l,".").concat(v)]||d[v]||u[v]||a;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=v;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}v.displayName="MDXCreateElement"},4024:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={},o="Adaptive KeepAlive",p={unversionedId:"AdaptiveKeepAlive",id:"AdaptiveKeepAlive",title:"Adaptive KeepAlive",description:"Adaptive keepalive is a feature in the Courier library which tries to find the most optimal keepalive interval for a client on a particular network. This helps us in optimising the number of ping requests sent over the network and keeping the connection alive.",source:"@site/docs/AdaptiveKeepAlive.md",sourceDirName:".",slug:"/AdaptiveKeepAlive",permalink:"/courier-android/docs/AdaptiveKeepAlive",draft:!1,editUrl:"https://github.com/gojek/courier-android/edit/main/docs/docs/AdaptiveKeepAlive.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Non-standard Connection options",permalink:"/courier-android/docs/NonStandardOptions"},next:{title:"MQTT Ping Sender",permalink:"/courier-android/docs/PingSender"}},l={},s=[{value:"Usage",id:"usage",level:2},{value:"AdaptiveKeepAliveConfig",id:"adaptivekeepaliveconfig",level:3}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"adaptive-keepalive"},"Adaptive KeepAlive"),(0,r.kt)("p",null,"Adaptive keepalive is a feature in the Courier library which tries to find the most optimal keepalive interval for a client on a particular network. This helps us in optimising the number of ping requests sent over the network and keeping the connection alive."),(0,r.kt)("p",null,"You can read about Adaptive KeepAlive in detail ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/gojekengineering/adaptive-heartbeats-for-our-information-superhighway-26459bf85d62"},"here"),"."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To enable adaptive keepalive for your Courier connection, you just need to pass ",(0,r.kt)("inlineCode",{parentName:"p"},"AdaptiveKeepAliveConfig")," inside ",(0,r.kt)("a",{parentName:"p",href:"ExperimentConfigs"},"ExperimentConfigs"),"."),(0,r.kt)("p",null,"This will create a new connection having the same connect options as the original connection. Only the client id for this new connection is changed by appending the ",(0,r.kt)("inlineCode",{parentName:"p"},":adaptive")," suffix to the original client id."),(0,r.kt)("h3",{id:"adaptivekeepaliveconfig"},"AdaptiveKeepAliveConfig"),(0,r.kt)("p",null,"AdaptiveKeepAliveConfig has the following configs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"lowerBoundMinutes")," : Lower bound of the window in which optimal keepalive interval has to be searched.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"upperBoundMinutes")," : Upper bound of the window in which optimal keepalive interval has to be searched.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"stepMinutes")," : Step size with which keep alive interval is incremented while searching for the optimal keepalive interval. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"optimalKeepAliveResetLimit")," : Once optimal keepalive interval is found, it will be reset if it keeps failing beyond ",(0,r.kt)("strong",{parentName:"p"},"optimalKeepAliveResetLimit"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"pingSender")," : Implementation of ping sender used for sending ping requests over the new MQTT connection used for finding the optimal keepalive interval."))))}u.isMDXComponent=!0}}]);