"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>d});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||g[m]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const a={},i="Connection Setup",c={unversionedId:"ConnectionSetup",id:"ConnectionSetup",title:"Connection Setup",description:"MqttClient",source:"@site/docs/ConnectionSetup.md",sourceDirName:".",slug:"/ConnectionSetup",permalink:"/courier-android/docs/ConnectionSetup",draft:!1,editUrl:"https://github.com/gojek/courier-android/edit/main/docs/docs/ConnectionSetup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sample App",permalink:"/courier-android/docs/SampleApp"},next:{title:"MQTT Client Configuration",permalink:"/courier-android/docs/MqttConfiguration"}},l={},p=[{value:"MqttClient",id:"mqttclient",level:2},{value:"Connect using MqttClient",id:"connect-using-mqttclient",level:3},{value:"Disconnect using MqttClient",id:"disconnect-using-mqttclient",level:3},{value:"MqttConnectOptions",id:"mqttconnectoptions",level:3}],s={toc:p},u="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"connection-setup"},"Connection Setup"),(0,o.yg)("h2",{id:"mqttclient"},"MqttClient"),(0,o.yg)("p",null,"An instance of ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/gojek/courier-android/blob/main/mqtt-client/src/main/java/com/gojek/mqtt/client/MqttClient.kt"},"MqttClient")," needs to be created in order to establish a Courier connection."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-kotlin"},"val mqttClient = MqttClientFactory.create(\n    context = context,\n    mqttConfiguration = mqttConfiguration\n)\n")),(0,o.yg)("h3",{id:"connect-using-mqttclient"},"Connect using MqttClient"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-kotlin"},'val alpnProtocol = "mqtt"\nval connectOptions = MqttConnectOptions.Builder()\n              .serverUris(listof(ServerUri(SERVER_URI, SERVER_PORT)))\n              .clientId(clientId)\n              .userName(username)\n              .password(password)\n              .keepAlive(KeepAlive(timeSeconds = keepAliveSeconds))\n              .cleanSession(cleanSessionFlag)\n              .alpnProtocols(listOf(Protocol(alpnProtocol)))\n              .build()\n\nmqttClient.connect(connectOptions)\n')),(0,o.yg)("h3",{id:"disconnect-using-mqttclient"},"Disconnect using MqttClient"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-kotlin"},"mqttClient.disconnect()\n")),(0,o.yg)("h3",{id:"mqttconnectoptions"},"MqttConnectOptions"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/gojek/courier-android/blob/main/mqtt-client/src/main/java/com/gojek/mqtt/model/MqttConnectOptions.kt"},"MqttConnectOptions")," represents the properties of the underlying MQTT connection in Courier."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Server URIs")," : List of ServerUri representing the host and port of an MQTT broker.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Client Id")," : Unique ID of the MQTT client.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Username")," : Username of the MQTT client.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Password")," : Password of the MQTT client.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"KeepAlive Interval")," : Interval at which keep alive packets are sent for the MQTT connection.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Clean Session Flag")," : When clean session is false, a persistent connection is created. Otherwise, non-persistent connection is created and all persisted information is cleared from both client and broker.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Read Timeout")," : Read timeout of the SSL/TCP socket created for the MQTT connection.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"MQTT protocol version")," : It can be either VERSION_3_1 or VERSION_3_1_1.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"User properties")," : Custom user properties appended to the CONNECT packet.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Socket Factory")," : Sets the socket factory used to create connections. If unset, the ",(0,o.yg)("strong",{parentName:"p"},"SocketFactory.getDefault")," socket factory will be used. Set ",(0,o.yg)("a",{parentName:"p",href:"ExperimentConfigs"},"shouldUseNewSSLFlow")," to true to enable this.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"SSL Socket Factory"),": Sets the socket factory and trust manager used to secure MQTT connections. If unset, the system defaults will be used. Set ",(0,o.yg)("a",{parentName:"p",href:"ExperimentConfigs"},"shouldUseNewSSLFlow")," to true to enable this.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Connection Spec"),": Specifies configuration for the socket connection that MQTT traffic travels through. This includes the TLS version and cipher suites to use when negotiating a secure connection. Set ",(0,o.yg)("a",{parentName:"p",href:"ExperimentConfigs"},"shouldUseNewSSLFlow")," to true to enable this.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"ALPN Protocols"),": Configure the alpn protocols used by this client to communicate with MQTT broker. Set ",(0,o.yg)("a",{parentName:"p",href:"ExperimentConfigs"},"shouldUseNewSSLFlow")," to true to enable this."))))}g.isMDXComponent=!0}}]);