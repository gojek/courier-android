"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[859],{5680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>d});var n=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),g=i,d=m["".concat(p,".").concat(g)]||m[g]||u[g]||a;return r?n.createElement(d,o(o({ref:t},l),{},{components:r})):n.createElement(d,o({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8688:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(8168),i=(r(6540),r(5680));const a={},o="Experiment Configs",s={unversionedId:"ExperimentConfigs",id:"ExperimentConfigs",title:"Experiment Configs",description:"These are the experimentation configs used in Courier library. These are volatile configs i.e., they can be modified/moved/removed in future.",source:"@site/docs/ExperimentConfigs.md",sourceDirName:".",slug:"/ExperimentConfigs",permalink:"/courier-android/docs/ExperimentConfigs",draft:!1,editUrl:"https://github.com/gojek/courier-android/edit/main/docs/docs/ExperimentConfigs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Message & Stream Adapters",permalink:"/courier-android/docs/MessageStreamAdapters"},next:{title:"Authenticator",permalink:"/courier-android/docs/Authenticator"}},p={},c=[],l={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,i.yg)(m,(0,n.A)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"experiment-configs"},"Experiment Configs"),(0,i.yg)("p",null,"These are the experimentation configs used in Courier library. These are volatile configs i.e., they can be modified/moved/removed in future."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"isPersistentSubscriptionStoreEnabled")," : When enabled, ",(0,i.yg)("inlineCode",{parentName:"p"},"PersistableSubscriptionStore")," implementation of ",(0,i.yg)("inlineCode",{parentName:"p"},"SubscriptionStore")," is used. Otherwise, ",(0,i.yg)("inlineCode",{parentName:"p"},"InMemorySubscriptionStore")," is used. Read more about ",(0,i.yg)("a",{parentName:"p",href:"SubscriptionStore"},"SubscriptionStore"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"adaptiveKeepAliveConfig")," : This config is used for enabling ",(0,i.yg)("a",{parentName:"p",href:"AdaptiveKeepAlive"},"Adaptive KeepAlive")," feature in courier library.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"activityCheckIntervalSeconds")," : Interval at which channel activity is checked for unacknowledged MQTT packets.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"inactivityTimeoutSeconds")," : When acknowledgement for an MQTT packet is not received within this interval, the connection is reestablished.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"policyResetTimeSeconds")," : After this interval, connect retry policy is reset once the connection is successfully made.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"incomingMessagesTTLSecs")," : When there is no listener attached for an incoming message, messages are persisted for this interval.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"incomingMessagesCleanupIntervalSecs")," : Interval at which cleanup for incoming messages persistence is performed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"shouldUseNewSSLFlow")," : Set this true for enabling alpn protocol, custom ssl socket factory."))))}u.isMDXComponent=!0}}]);